// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: websocket/v1/message.proto

package websocketv1

import (
	v1 "github.com/trysourcetool/sourcetool/proto/go/exception/v1"
	v11 "github.com/trysourcetool/sourcetool/proto/go/page/v1"
	v12 "github.com/trysourcetool/sourcetool/proto/go/widget/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScriptFinished_Status int32

const (
	ScriptFinished_STATUS_UNSPECIFIED ScriptFinished_Status = 0
	ScriptFinished_STATUS_SUCCESS     ScriptFinished_Status = 1
	ScriptFinished_STATUS_FAILURE     ScriptFinished_Status = 2
)

// Enum value maps for ScriptFinished_Status.
var (
	ScriptFinished_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_FAILURE",
	}
	ScriptFinished_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_FAILURE":     2,
	}
)

func (x ScriptFinished_Status) Enum() *ScriptFinished_Status {
	p := new(ScriptFinished_Status)
	*p = x
	return p
}

func (x ScriptFinished_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScriptFinished_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_v1_message_proto_enumTypes[0].Descriptor()
}

func (ScriptFinished_Status) Type() protoreflect.EnumType {
	return &file_websocket_v1_message_proto_enumTypes[0]
}

func (x ScriptFinished_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScriptFinished_Status.Descriptor instead.
func (ScriptFinished_Status) EnumDescriptor() ([]byte, []int) {
	return file_websocket_v1_message_proto_rawDescGZIP(), []int{8, 0}
}

type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Type:
	//
	//	*Message_Exception
	//	*Message_InitializeHost
	//	*Message_InitializeHostCompleted
	//	*Message_InitializeClient
	//	*Message_InitializeClientCompleted
	//	*Message_RenderWidget
	//	*Message_RerunPage
	//	*Message_CloseSession
	//	*Message_ScriptFinished
	Type          isMessage_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_websocket_v1_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_v1_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_websocket_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetType() isMessage_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Message) GetException() *v1.Exception {
	if x != nil {
		if x, ok := x.Type.(*Message_Exception); ok {
			return x.Exception
		}
	}
	return nil
}

func (x *Message) GetInitializeHost() *InitializeHost {
	if x != nil {
		if x, ok := x.Type.(*Message_InitializeHost); ok {
			return x.InitializeHost
		}
	}
	return nil
}

func (x *Message) GetInitializeHostCompleted() *InitializeHostCompleted {
	if x != nil {
		if x, ok := x.Type.(*Message_InitializeHostCompleted); ok {
			return x.InitializeHostCompleted
		}
	}
	return nil
}

func (x *Message) GetInitializeClient() *InitializeClient {
	if x != nil {
		if x, ok := x.Type.(*Message_InitializeClient); ok {
			return x.InitializeClient
		}
	}
	return nil
}

func (x *Message) GetInitializeClientCompleted() *InitializeClientCompleted {
	if x != nil {
		if x, ok := x.Type.(*Message_InitializeClientCompleted); ok {
			return x.InitializeClientCompleted
		}
	}
	return nil
}

func (x *Message) GetRenderWidget() *RenderWidget {
	if x != nil {
		if x, ok := x.Type.(*Message_RenderWidget); ok {
			return x.RenderWidget
		}
	}
	return nil
}

func (x *Message) GetRerunPage() *RerunPage {
	if x != nil {
		if x, ok := x.Type.(*Message_RerunPage); ok {
			return x.RerunPage
		}
	}
	return nil
}

func (x *Message) GetCloseSession() *CloseSession {
	if x != nil {
		if x, ok := x.Type.(*Message_CloseSession); ok {
			return x.CloseSession
		}
	}
	return nil
}

func (x *Message) GetScriptFinished() *ScriptFinished {
	if x != nil {
		if x, ok := x.Type.(*Message_ScriptFinished); ok {
			return x.ScriptFinished
		}
	}
	return nil
}

type isMessage_Type interface {
	isMessage_Type()
}

type Message_Exception struct {
	Exception *v1.Exception `protobuf:"bytes,2,opt,name=exception,proto3,oneof"`
}

type Message_InitializeHost struct {
	InitializeHost *InitializeHost `protobuf:"bytes,3,opt,name=initialize_host,json=initializeHost,proto3,oneof"`
}

type Message_InitializeHostCompleted struct {
	InitializeHostCompleted *InitializeHostCompleted `protobuf:"bytes,4,opt,name=initialize_host_completed,json=initializeHostCompleted,proto3,oneof"`
}

type Message_InitializeClient struct {
	InitializeClient *InitializeClient `protobuf:"bytes,5,opt,name=initialize_client,json=initializeClient,proto3,oneof"`
}

type Message_InitializeClientCompleted struct {
	InitializeClientCompleted *InitializeClientCompleted `protobuf:"bytes,6,opt,name=initialize_client_completed,json=initializeClientCompleted,proto3,oneof"`
}

type Message_RenderWidget struct {
	RenderWidget *RenderWidget `protobuf:"bytes,7,opt,name=render_widget,json=renderWidget,proto3,oneof"`
}

type Message_RerunPage struct {
	RerunPage *RerunPage `protobuf:"bytes,8,opt,name=rerun_page,json=rerunPage,proto3,oneof"`
}

type Message_CloseSession struct {
	CloseSession *CloseSession `protobuf:"bytes,9,opt,name=close_session,json=closeSession,proto3,oneof"`
}

type Message_ScriptFinished struct {
	ScriptFinished *ScriptFinished `protobuf:"bytes,10,opt,name=script_finished,json=scriptFinished,proto3,oneof"`
}

func (*Message_Exception) isMessage_Type() {}

func (*Message_InitializeHost) isMessage_Type() {}

func (*Message_InitializeHostCompleted) isMessage_Type() {}

func (*Message_InitializeClient) isMessage_Type() {}

func (*Message_InitializeClientCompleted) isMessage_Type() {}

func (*Message_RenderWidget) isMessage_Type() {}

func (*Message_RerunPage) isMessage_Type() {}

func (*Message_CloseSession) isMessage_Type() {}

func (*Message_ScriptFinished) isMessage_Type() {}

type InitializeHost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKey        string                 `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	SdkName       string                 `protobuf:"bytes,2,opt,name=sdk_name,json=sdkName,proto3" json:"sdk_name,omitempty"`
	SdkVersion    string                 `protobuf:"bytes,3,opt,name=sdk_version,json=sdkVersion,proto3" json:"sdk_version,omitempty"`
	Pages         []*v11.Page            `protobuf:"bytes,4,rep,name=pages,proto3" json:"pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeHost) Reset() {
	*x = InitializeHost{}
	mi := &file_websocket_v1_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeHost) ProtoMessage() {}

func (x *InitializeHost) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_v1_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeHost.ProtoReflect.Descriptor instead.
func (*InitializeHost) Descriptor() ([]byte, []int) {
	return file_websocket_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *InitializeHost) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *InitializeHost) GetSdkName() string {
	if x != nil {
		return x.SdkName
	}
	return ""
}

func (x *InitializeHost) GetSdkVersion() string {
	if x != nil {
		return x.SdkVersion
	}
	return ""
}

func (x *InitializeHost) GetPages() []*v11.Page {
	if x != nil {
		return x.Pages
	}
	return nil
}

type InitializeHostCompleted struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	HostInstanceId string                 `protobuf:"bytes,1,opt,name=host_instance_id,json=hostInstanceId,proto3" json:"host_instance_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InitializeHostCompleted) Reset() {
	*x = InitializeHostCompleted{}
	mi := &file_websocket_v1_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeHostCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeHostCompleted) ProtoMessage() {}

func (x *InitializeHostCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_v1_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeHostCompleted.ProtoReflect.Descriptor instead.
func (*InitializeHostCompleted) Descriptor() ([]byte, []int) {
	return file_websocket_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *InitializeHostCompleted) GetHostInstanceId() string {
	if x != nil {
		return x.HostInstanceId
	}
	return ""
}

type InitializeClient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     *string                `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"`
	PageId        string                 `protobuf:"bytes,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeClient) Reset() {
	*x = InitializeClient{}
	mi := &file_websocket_v1_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeClient) ProtoMessage() {}

func (x *InitializeClient) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_v1_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeClient.ProtoReflect.Descriptor instead.
func (*InitializeClient) Descriptor() ([]byte, []int) {
	return file_websocket_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *InitializeClient) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *InitializeClient) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

type InitializeClientCompleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeClientCompleted) Reset() {
	*x = InitializeClientCompleted{}
	mi := &file_websocket_v1_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeClientCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeClientCompleted) ProtoMessage() {}

func (x *InitializeClientCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_v1_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeClientCompleted.ProtoReflect.Descriptor instead.
func (*InitializeClientCompleted) Descriptor() ([]byte, []int) {
	return file_websocket_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *InitializeClientCompleted) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type RenderWidget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	PageId        string                 `protobuf:"bytes,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Path          []int32                `protobuf:"varint,3,rep,packed,name=path,proto3" json:"path,omitempty"`
	Widget        *v12.Widget            `protobuf:"bytes,4,opt,name=widget,proto3" json:"widget,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenderWidget) Reset() {
	*x = RenderWidget{}
	mi := &file_websocket_v1_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenderWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderWidget) ProtoMessage() {}

func (x *RenderWidget) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_v1_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderWidget.ProtoReflect.Descriptor instead.
func (*RenderWidget) Descriptor() ([]byte, []int) {
	return file_websocket_v1_message_proto_rawDescGZIP(), []int{5}
}

func (x *RenderWidget) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RenderWidget) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *RenderWidget) GetPath() []int32 {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *RenderWidget) GetWidget() *v12.Widget {
	if x != nil {
		return x.Widget
	}
	return nil
}

type RerunPage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	PageId        string                 `protobuf:"bytes,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	States        []*v12.Widget          `protobuf:"bytes,3,rep,name=states,proto3" json:"states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RerunPage) Reset() {
	*x = RerunPage{}
	mi := &file_websocket_v1_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RerunPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RerunPage) ProtoMessage() {}

func (x *RerunPage) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_v1_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RerunPage.ProtoReflect.Descriptor instead.
func (*RerunPage) Descriptor() ([]byte, []int) {
	return file_websocket_v1_message_proto_rawDescGZIP(), []int{6}
}

func (x *RerunPage) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RerunPage) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *RerunPage) GetStates() []*v12.Widget {
	if x != nil {
		return x.States
	}
	return nil
}

type CloseSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseSession) Reset() {
	*x = CloseSession{}
	mi := &file_websocket_v1_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSession) ProtoMessage() {}

func (x *CloseSession) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_v1_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSession.ProtoReflect.Descriptor instead.
func (*CloseSession) Descriptor() ([]byte, []int) {
	return file_websocket_v1_message_proto_rawDescGZIP(), []int{7}
}

func (x *CloseSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ScriptFinished struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Status        ScriptFinished_Status  `protobuf:"varint,2,opt,name=status,proto3,enum=sourcetool.websocket.v1.ScriptFinished_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScriptFinished) Reset() {
	*x = ScriptFinished{}
	mi := &file_websocket_v1_message_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScriptFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptFinished) ProtoMessage() {}

func (x *ScriptFinished) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_v1_message_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptFinished.ProtoReflect.Descriptor instead.
func (*ScriptFinished) Descriptor() ([]byte, []int) {
	return file_websocket_v1_message_proto_rawDescGZIP(), []int{8}
}

func (x *ScriptFinished) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ScriptFinished) GetStatus() ScriptFinished_Status {
	if x != nil {
		return x.Status
	}
	return ScriptFinished_STATUS_UNSPECIFIED
}

var File_websocket_v1_message_proto protoreflect.FileDescriptor

var file_websocket_v1_message_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xae, 0x06, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x09, 0x65,
	0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x65, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x52, 0x0a, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x19, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74,
	0x6f, 0x6f, 0x6c, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x17, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x77, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x74, 0x0a,
	0x1b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2e,
	0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x19, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x77, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x12, 0x43, 0x0a, 0x0a, 0x72, 0x65, 0x72, 0x75, 0x6e, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x6f,
	0x6f, 0x6c, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x72, 0x75, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x72,
	0x75, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x0f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x95, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x64, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x64, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x64, 0x6b, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x64,
	0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x17, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x5e, 0x0a,
	0x10, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x0a,
	0x19, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x0c, 0x52, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x06, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74,
	0x6f, 0x6f, 0x6c, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x52, 0x06, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x22, 0x79, 0x0a, 0x09,
	0x52, 0x65, 0x72, 0x75, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x77,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x0e, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x42, 0xf0, 0x01, 0x0a, 0x1b, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x77, 0x65,
	0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x79, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x74, 0x6f, 0x6f, 0x6c, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x53, 0x57, 0x58, 0xaa, 0x02, 0x17, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x17, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x5c, 0x57,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x23, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x5c, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x19, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x6f, 0x6f, 0x6c, 0x3a, 0x3a,
	0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_websocket_v1_message_proto_rawDescOnce sync.Once
	file_websocket_v1_message_proto_rawDescData []byte
)

func file_websocket_v1_message_proto_rawDescGZIP() []byte {
	file_websocket_v1_message_proto_rawDescOnce.Do(func() {
		file_websocket_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_websocket_v1_message_proto_rawDesc), len(file_websocket_v1_message_proto_rawDesc)))
	})
	return file_websocket_v1_message_proto_rawDescData
}

var file_websocket_v1_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_websocket_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_websocket_v1_message_proto_goTypes = []any{
	(ScriptFinished_Status)(0),        // 0: sourcetool.websocket.v1.ScriptFinished.Status
	(*Message)(nil),                   // 1: sourcetool.websocket.v1.Message
	(*InitializeHost)(nil),            // 2: sourcetool.websocket.v1.InitializeHost
	(*InitializeHostCompleted)(nil),   // 3: sourcetool.websocket.v1.InitializeHostCompleted
	(*InitializeClient)(nil),          // 4: sourcetool.websocket.v1.InitializeClient
	(*InitializeClientCompleted)(nil), // 5: sourcetool.websocket.v1.InitializeClientCompleted
	(*RenderWidget)(nil),              // 6: sourcetool.websocket.v1.RenderWidget
	(*RerunPage)(nil),                 // 7: sourcetool.websocket.v1.RerunPage
	(*CloseSession)(nil),              // 8: sourcetool.websocket.v1.CloseSession
	(*ScriptFinished)(nil),            // 9: sourcetool.websocket.v1.ScriptFinished
	(*v1.Exception)(nil),              // 10: sourcetool.exception.v1.Exception
	(*v11.Page)(nil),                  // 11: sourcetool.page.v1.Page
	(*v12.Widget)(nil),                // 12: sourcetool.widget.v1.Widget
}
var file_websocket_v1_message_proto_depIdxs = []int32{
	10, // 0: sourcetool.websocket.v1.Message.exception:type_name -> sourcetool.exception.v1.Exception
	2,  // 1: sourcetool.websocket.v1.Message.initialize_host:type_name -> sourcetool.websocket.v1.InitializeHost
	3,  // 2: sourcetool.websocket.v1.Message.initialize_host_completed:type_name -> sourcetool.websocket.v1.InitializeHostCompleted
	4,  // 3: sourcetool.websocket.v1.Message.initialize_client:type_name -> sourcetool.websocket.v1.InitializeClient
	5,  // 4: sourcetool.websocket.v1.Message.initialize_client_completed:type_name -> sourcetool.websocket.v1.InitializeClientCompleted
	6,  // 5: sourcetool.websocket.v1.Message.render_widget:type_name -> sourcetool.websocket.v1.RenderWidget
	7,  // 6: sourcetool.websocket.v1.Message.rerun_page:type_name -> sourcetool.websocket.v1.RerunPage
	8,  // 7: sourcetool.websocket.v1.Message.close_session:type_name -> sourcetool.websocket.v1.CloseSession
	9,  // 8: sourcetool.websocket.v1.Message.script_finished:type_name -> sourcetool.websocket.v1.ScriptFinished
	11, // 9: sourcetool.websocket.v1.InitializeHost.pages:type_name -> sourcetool.page.v1.Page
	12, // 10: sourcetool.websocket.v1.RenderWidget.widget:type_name -> sourcetool.widget.v1.Widget
	12, // 11: sourcetool.websocket.v1.RerunPage.states:type_name -> sourcetool.widget.v1.Widget
	0,  // 12: sourcetool.websocket.v1.ScriptFinished.status:type_name -> sourcetool.websocket.v1.ScriptFinished.Status
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_websocket_v1_message_proto_init() }
func file_websocket_v1_message_proto_init() {
	if File_websocket_v1_message_proto != nil {
		return
	}
	file_websocket_v1_message_proto_msgTypes[0].OneofWrappers = []any{
		(*Message_Exception)(nil),
		(*Message_InitializeHost)(nil),
		(*Message_InitializeHostCompleted)(nil),
		(*Message_InitializeClient)(nil),
		(*Message_InitializeClientCompleted)(nil),
		(*Message_RenderWidget)(nil),
		(*Message_RerunPage)(nil),
		(*Message_CloseSession)(nil),
		(*Message_ScriptFinished)(nil),
	}
	file_websocket_v1_message_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_websocket_v1_message_proto_rawDesc), len(file_websocket_v1_message_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_websocket_v1_message_proto_goTypes,
		DependencyIndexes: file_websocket_v1_message_proto_depIdxs,
		EnumInfos:         file_websocket_v1_message_proto_enumTypes,
		MessageInfos:      file_websocket_v1_message_proto_msgTypes,
	}.Build()
	File_websocket_v1_message_proto = out.File
	file_websocket_v1_message_proto_goTypes = nil
	file_websocket_v1_message_proto_depIdxs = nil
}
