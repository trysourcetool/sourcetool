basePath: /api/v1.
definitions:
  errdefs.Error:
    properties:
      detail:
        type: string
      id:
        type: string
      meta:
        additionalProperties: {}
        type: object
      status:
        type: integer
      title:
        type: string
    type: object
  requests.CreateAPIKeyRequest:
    properties:
      environmentId:
        type: string
      name:
        type: string
    required:
    - environmentId
    - name
    type: object
  requests.CreateEnvironmentRequest:
    properties:
      color:
        type: string
      name:
        type: string
      slug:
        type: string
    required:
    - color
    - name
    - slug
    type: object
  requests.CreateGroupRequest:
    properties:
      name:
        type: string
      slug:
        type: string
      userIds:
        items:
          type: string
        type: array
    required:
    - name
    - slug
    - userIds
    type: object
  requests.CreateOrganizationRequest:
    properties:
      subdomain:
        type: string
    type: object
  requests.GetGoogleAuthCodeURLInvitationRequest:
    properties:
      invitationToken:
        type: string
    required:
    - invitationToken
    type: object
  requests.InviteUsersRequest:
    properties:
      emails:
        items:
          type: string
        type: array
      role:
        enum:
        - admin
        - developer
        - member
        type: string
    required:
    - emails
    - role
    type: object
  requests.SaveAuthRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  requests.SendSignUpInstructionsRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  requests.SendUpdateUserEmailInstructionsRequest:
    properties:
      email:
        type: string
      emailConfirmation:
        type: string
    required:
    - email
    - emailConfirmation
    type: object
  requests.SignInInvitationRequest:
    properties:
      invitationToken:
        type: string
      password:
        type: string
    required:
    - invitationToken
    - password
    type: object
  requests.SignInRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  requests.SignInWithGoogleInvitationRequest:
    properties:
      sessionToken:
        type: string
    required:
    - sessionToken
    type: object
  requests.SignInWithGoogleRequest:
    properties:
      sessionToken:
        type: string
    required:
    - sessionToken
    type: object
  requests.SignUpInvitationRequest:
    properties:
      firstName:
        type: string
      invitationToken:
        type: string
      lastName:
        type: string
      password:
        type: string
      passwordConfirmation:
        type: string
    required:
    - firstName
    - invitationToken
    - lastName
    - password
    - passwordConfirmation
    type: object
  requests.SignUpRequest:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      passwordConfirmation:
        type: string
      token:
        type: string
    required:
    - firstName
    - lastName
    - password
    - passwordConfirmation
    - token
    type: object
  requests.SignUpWithGoogleInvitationRequest:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      sessionToken:
        type: string
    required:
    - firstName
    - lastName
    - sessionToken
    type: object
  requests.SignUpWithGoogleRequest:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      sessionToken:
        type: string
    required:
    - firstName
    - lastName
    - sessionToken
    type: object
  requests.UpdateAPIKeyRequest:
    properties:
      name:
        type: string
    type: object
  requests.UpdateEnvironmentRequest:
    properties:
      color:
        type: string
      name:
        type: string
    required:
    - color
    - name
    type: object
  requests.UpdateGroupRequest:
    properties:
      name:
        type: string
      userIds:
        items:
          type: string
        type: array
    required:
    - name
    - userIds
    type: object
  requests.UpdateOrganizationUserRequest:
    properties:
      groupIds:
        items:
          type: string
        type: array
      role:
        enum:
        - admin
        - developer
        - member
        type: string
    type: object
  requests.UpdateUserEmailRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  requests.UpdateUserPasswordRequest:
    properties:
      currentPassword:
        type: string
      password:
        type: string
      passwordConfirmation:
        type: string
    required:
    - currentPassword
    - password
    - passwordConfirmation
    type: object
  requests.UpdateUserRequest:
    properties:
      firstName:
        type: string
      lastName:
        type: string
    type: object
  responses.APIKeyResponse:
    properties:
      createdAt:
        type: string
      environment:
        $ref: '#/definitions/responses.EnvironmentResponse'
      id:
        type: string
      key:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  responses.CreateAPIKeyResponse:
    properties:
      apiKey:
        $ref: '#/definitions/responses.APIKeyResponse'
    type: object
  responses.CreateEnvironmentResponse:
    properties:
      environment:
        $ref: '#/definitions/responses.EnvironmentResponse'
    type: object
  responses.CreateGroupResponse:
    properties:
      group:
        $ref: '#/definitions/responses.GroupResponse'
    type: object
  responses.CreateOrganizationResponse:
    properties:
      organization:
        $ref: '#/definitions/responses.OrganizationResponse'
    type: object
  responses.DeleteAPIKeyResponse:
    properties:
      apiKey:
        $ref: '#/definitions/responses.APIKeyResponse'
    type: object
  responses.DeleteEnvironmentResponse:
    properties:
      environment:
        $ref: '#/definitions/responses.EnvironmentResponse'
    type: object
  responses.DeleteGroupResponse:
    properties:
      group:
        $ref: '#/definitions/responses.GroupResponse'
    type: object
  responses.EnvironmentResponse:
    properties:
      color:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      slug:
        type: string
      updatedAt:
        type: string
    type: object
  responses.GetAPIKeyResponse:
    properties:
      apiKey:
        $ref: '#/definitions/responses.APIKeyResponse'
    type: object
  responses.GetEnvironmentResponse:
    properties:
      environment:
        $ref: '#/definitions/responses.EnvironmentResponse'
    type: object
  responses.GetGoogleAuthCodeURLInvitationResponse:
    properties:
      url:
        type: string
    type: object
  responses.GetGoogleAuthCodeURLResponse:
    properties:
      url:
        type: string
    type: object
  responses.GetGroupResponse:
    properties:
      group:
        $ref: '#/definitions/responses.GroupResponse'
    type: object
  responses.GetMeResponse:
    properties:
      user:
        $ref: '#/definitions/responses.UserResponse'
    type: object
  responses.GroupPageResponse:
    properties:
      createdAt:
        type: string
      groupId:
        type: string
      id:
        type: string
      pageId:
        type: string
      updatedAt:
        type: string
    type: object
  responses.GroupResponse:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      slug:
        type: string
      updatedAt:
        type: string
    type: object
  responses.HostInstanceResponse:
    properties:
      createdAt:
        type: string
      id:
        type: string
      sdkName:
        type: string
      sdkVersion:
        type: string
      status:
        type: string
      updatedAt:
        type: string
    type: object
  responses.InviteUsersResponse:
    properties:
      userInvitations:
        items:
          $ref: '#/definitions/responses.UserInvitationResponse'
        type: array
    type: object
  responses.ListAPIKeysResponse:
    properties:
      devKey:
        $ref: '#/definitions/responses.APIKeyResponse'
      liveKeys:
        items:
          $ref: '#/definitions/responses.APIKeyResponse'
        type: array
    type: object
  responses.ListEnvironmentsResponse:
    properties:
      environments:
        items:
          $ref: '#/definitions/responses.EnvironmentResponse'
        type: array
    type: object
  responses.ListGroupsResponse:
    properties:
      groups:
        items:
          $ref: '#/definitions/responses.GroupResponse'
        type: array
      userGroups:
        items:
          $ref: '#/definitions/responses.UserGroupResponse'
        type: array
      users:
        items:
          $ref: '#/definitions/responses.UserResponse'
        type: array
    type: object
  responses.ListPagesResponse:
    properties:
      groupPages:
        items:
          $ref: '#/definitions/responses.GroupPageResponse'
        type: array
      groups:
        items:
          $ref: '#/definitions/responses.GroupResponse'
        type: array
      pages:
        items:
          $ref: '#/definitions/responses.PageResponse'
        type: array
      userGroups:
        items:
          $ref: '#/definitions/responses.UserGroupResponse'
        type: array
      users:
        items:
          $ref: '#/definitions/responses.UserResponse'
        type: array
    type: object
  responses.ListUsersResponse:
    properties:
      userInvitations:
        items:
          $ref: '#/definitions/responses.UserInvitationResponse'
        type: array
      users:
        items:
          $ref: '#/definitions/responses.UserResponse'
        type: array
    type: object
  responses.ObtainAuthTokenResponse:
    properties:
      authUrl:
        type: string
      token:
        type: string
    type: object
  responses.OrganizationResponse:
    properties:
      createdAt:
        type: string
      id:
        type: string
      subdomain:
        type: string
      updatedAt:
        type: string
    type: object
  responses.PageResponse:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      route:
        type: string
      updatedAt:
        type: string
    type: object
  responses.PingHostInstanceResponse:
    properties:
      hostInstance:
        $ref: '#/definitions/responses.HostInstanceResponse'
    type: object
  responses.RefreshTokenResponse:
    properties:
      expiresAt:
        type: string
    type: object
  responses.SaveAuthResponse:
    properties:
      expiresAt:
        type: string
      redirectUrl:
        type: string
    type: object
  responses.SendSignUpInstructionsResponse:
    properties:
      email:
        type: string
    type: object
  responses.SignInResponse:
    properties:
      authUrl:
        type: string
      isOrganizationExists:
        type: boolean
      token:
        type: string
    type: object
  responses.SignInWithGoogleResponse:
    properties:
      authUrl:
        type: string
      isOrganizationExists:
        type: boolean
      token:
        type: string
    type: object
  responses.StatusResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  responses.UpdateAPIKeyResponse:
    properties:
      apiKey:
        $ref: '#/definitions/responses.APIKeyResponse'
    type: object
  responses.UpdateEnvironmentResponse:
    properties:
      environment:
        $ref: '#/definitions/responses.EnvironmentResponse'
    type: object
  responses.UpdateGroupResponse:
    properties:
      group:
        $ref: '#/definitions/responses.GroupResponse'
    type: object
  responses.UpdateUserEmailResponse:
    properties:
      user:
        $ref: '#/definitions/responses.UserResponse'
    type: object
  responses.UpdateUserPasswordResponse:
    properties:
      user:
        $ref: '#/definitions/responses.UserResponse'
    type: object
  responses.UpdateUserResponse:
    properties:
      user:
        $ref: '#/definitions/responses.UserResponse'
    type: object
  responses.UserGroupResponse:
    properties:
      createdAt:
        type: string
      groupId:
        type: string
      id:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  responses.UserInvitationResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
    type: object
  responses.UserResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      organization:
        $ref: '#/definitions/responses.OrganizationResponse'
      role:
        type: string
      updatedAt:
        type: string
    type: object
host: https://api.trysourcetool.com
info:
  contact: {}
  description: Sourcetool's API documentation
  termsOfService: http://swagger.io/terms/
  title: Sourcetool API
  version: "1.0"
paths:
  /apiKeys:
    get:
      consumes:
      - application/json
      operationId: list-apikeys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ListAPIKeysResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - apiKeys
    post:
      consumes:
      - application/json
      operationId: create-apikey
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.CreateAPIKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.CreateAPIKeyResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - apiKeys
  /apiKeys/{apiKeyID}:
    delete:
      consumes:
      - application/json
      operationId: delete-apikey
      parameters:
      - description: API Key ID
        in: path
        name: apiKeyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteAPIKeyResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - apiKeys
    get:
      consumes:
      - application/json
      operationId: get-apikey
      parameters:
      - description: API Key ID
        in: path
        name: apiKeyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetAPIKeyResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - apiKeys
    put:
      consumes:
      - application/json
      operationId: update-apikey
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateAPIKeyRequest'
      - description: API Key ID
        in: path
        name: apiKeyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UpdateAPIKeyResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - apiKeys
  /environments:
    get:
      consumes:
      - application/json
      operationId: list-environments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ListEnvironmentsResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - environments
    post:
      consumes:
      - application/json
      operationId: create-environment
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.CreateEnvironmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.CreateEnvironmentResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - environments
  /environments/{environmentID}:
    delete:
      consumes:
      - application/json
      operationId: delete-environment
      parameters:
      - description: Environment ID
        in: path
        name: environmentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteEnvironmentResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - environments
    get:
      consumes:
      - application/json
      operationId: get-environment
      parameters:
      - description: Environment ID
        in: path
        name: environmentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetEnvironmentResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - environments
    put:
      consumes:
      - application/json
      operationId: update-environment
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateEnvironmentRequest'
      - description: Environment ID
        in: path
        name: environmentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UpdateEnvironmentResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - environments
  /groups:
    get:
      consumes:
      - application/json
      operationId: list-groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ListGroupsResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - groups
    post:
      consumes:
      - application/json
      operationId: create-group
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.CreateGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.CreateGroupResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - groups
  /groups/{groupID}:
    delete:
      consumes:
      - application/json
      operationId: delete-group
      parameters:
      - description: Group ID
        in: path
        name: groupID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteGroupResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - groups
    get:
      consumes:
      - application/json
      operationId: get-group
      parameters:
      - description: Group ID
        in: path
        name: groupID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetGroupResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - groups
    put:
      consumes:
      - application/json
      operationId: update-group
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateGroupRequest'
      - description: Group ID
        in: path
        name: groupID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UpdateGroupResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - groups
  /hostInstances/ping:
    get:
      consumes:
      - application/json
      operationId: ping-host-instance
      parameters:
      - description: Page ID
        in: query
        name: pageId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.PingHostInstanceResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - hostInstances
  /organizations:
    post:
      consumes:
      - application/json
      operationId: create-organization
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.CreateOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.CreateOrganizationResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - organizations
  /organizations/checkSubdomainAvailability:
    get:
      consumes:
      - application/json
      operationId: check-organization-subdomain-availability
      parameters:
      - description: ' '
        in: query
        name: subdomain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StatusResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - organizations
  /organizations/users/{userID}:
    put:
      consumes:
      - application/json
      operationId: update-organization-user
      parameters:
      - description: ' '
        in: path
        name: userID
        required: true
        type: string
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateOrganizationUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UpdateUserResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - organizations
  /pages:
    get:
      consumes:
      - application/json
      operationId: list-pages
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ListPagesResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - pages
  /users:
    get:
      consumes:
      - application/json
      operationId: list-users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ListUsersResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
    put:
      consumes:
      - application/json
      operationId: update-user
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UpdateUserResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/email:
    put:
      consumes:
      - application/json
      operationId: update-user-email
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateUserEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UpdateUserEmailResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/invitations/oauth/google/authCodeUrl:
    post:
      consumes:
      - application/json
      operationId: get-google-auth-code-url-invitation
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.GetGoogleAuthCodeURLInvitationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetGoogleAuthCodeURLInvitationResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/invitations/oauth/google/signin:
    post:
      consumes:
      - application/json
      operationId: signin-with-google-invitation
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.SignInWithGoogleInvitationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StatusResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/invitations/oauth/google/signup:
    post:
      consumes:
      - application/json
      operationId: signup-with-google-invitation
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.SignUpWithGoogleInvitationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StatusResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/invitations/signin:
    post:
      consumes:
      - application/json
      operationId: signin-invitation
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.SignInInvitationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StatusResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/invitations/signup:
    post:
      consumes:
      - application/json
      operationId: signup-invitation
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.SignUpInvitationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StatusResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/invite:
    post:
      consumes:
      - application/json
      operationId: invite-users
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.InviteUsersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.InviteUsersResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/me:
    get:
      consumes:
      - application/json
      operationId: get-me
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetMeResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/oauth/google/authCodeUrl:
    post:
      consumes:
      - application/json
      operationId: get-google-auth-code-url
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetGoogleAuthCodeURLResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/oauth/google/signin:
    post:
      consumes:
      - application/json
      operationId: signin-with-google
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.SignInWithGoogleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SignInWithGoogleResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/oauth/google/signup:
    post:
      consumes:
      - application/json
      operationId: signup-with-google
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.SignUpWithGoogleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StatusResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/obtainAuthToken:
    post:
      consumes:
      - application/json
      operationId: obtain-auth-token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ObtainAuthTokenResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/password:
    put:
      consumes:
      - application/json
      operationId: update-user-password
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateUserPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UpdateUserPasswordResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/refreshToken:
    post:
      consumes:
      - application/json
      operationId: refresh-token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.RefreshTokenResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/saveAuth:
    post:
      consumes:
      - application/json
      operationId: save-auth
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.SaveAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SaveAuthResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/sendUpdateEmailInstructions:
    post:
      consumes:
      - application/json
      operationId: send-update-email-instructions
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.SendUpdateUserEmailInstructionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StatusResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/signin:
    post:
      consumes:
      - application/json
      operationId: signin
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SignInResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/signout:
    post:
      consumes:
      - application/json
      operationId: sign-out
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StatusResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/signup:
    post:
      consumes:
      - application/json
      operationId: signup
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StatusResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
  /users/signup/instructions:
    post:
      consumes:
      - application/json
      operationId: signup-instructions
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.SendSignUpInstructionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SendSignUpInstructionsResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errdefs.Error'
      tags:
      - users
swagger: "2.0"
