/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/root'
import { Route as layoutAuthPreviewImport } from './routes/layout-auth-preview'
import { Route as layoutDefaultImport } from './routes/layout-default'
import { Route as layoutAuthExternalImport } from './routes/layout-auth-external'
import { Route as pagesIndexImport } from './routes/pages/index'
import { Route as usersRouteImport } from './routes/users/route'
import { Route as pagesPageIdIndexImport } from './routes/pages/pageId/index'
import { Route as usersUserIdIndexImport } from './routes/users/$userId/index'
import { Route as OnboardingIndexImport } from './routes/onboarding/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as usersIndexImport } from './routes/users/index'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as GroupsIndexImport } from './routes/groups/index'
import { Route as EnvironmentsIndexImport } from './routes/environments/index'
import { Route as ApiKeysIndexImport } from './routes/apiKeys/index'
import { Route as SignupFollowupIndexImport } from './routes/signup/followup/index'
import { Route as OrganizationsNewIndexImport } from './routes/organizations/new/index'
import { Route as OnboardingCompleteIndexImport } from './routes/onboarding/complete/index'
import { Route as LoginEmailSentIndexImport } from './routes/login/emailSent/index'
import { Route as ErrorHostInstancePingErrorIndexImport } from './routes/error/hostInstancePingError/index'
import { Route as GroupsNewIndexImport } from './routes/groups/new/index'
import { Route as GroupsGroupIdIndexImport } from './routes/groups/$groupId/index'
import { Route as EnvironmentsNewIndexImport } from './routes/environments/new/index'
import { Route as EnvironmentsEnvironmentIdIndexImport } from './routes/environments/$environmentId/index'
import { Route as ApiKeysNewIndexImport } from './routes/apiKeys/new/index'
import { Route as ApiKeysApiKeyIdIndexImport } from './routes/apiKeys/$apiKeyId/index'
import { Route as AuthMagicAuthenticateIndexImport } from './routes/auth/magic/authenticate/index'
import { Route as AuthInvitationsLoginIndexImport } from './routes/auth/invitations/login/index'
import { Route as AuthInvitationsEmailSentIndexImport } from './routes/auth/invitations/emailSent/index'
import { Route as AuthGoogleCallbackIndexImport } from './routes/auth/google/callback/index'
import { Route as usersEmailUpdateConfirmIndexImport } from './routes/users/email/update/confirm/index'
import { Route as AuthInvitationsSignupFollowupIndexImport } from './routes/auth/invitations/signup/followup/index'
import { Route as AuthInvitationsMagicAuthenticateIndexImport } from './routes/auth/invitations/magic/authenticate/index'

// Create/Update Routes

const layoutAuthPreviewRoute = layoutAuthPreviewImport.update({
  id: '/_preview',
  getParentRoute: () => rootRoute,
} as any)

const layoutDefaultRoute = layoutDefaultImport.update({
  id: '/_default',
  getParentRoute: () => rootRoute,
} as any)

const layoutAuthExternalRoute = layoutAuthExternalImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const pagesIndexRoute = pagesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => layoutAuthExternalRoute,
} as any)

const usersRouteRoute = usersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => layoutAuthExternalRoute,
} as any)

const pagesPageIdIndexRoute = pagesPageIdIndexImport.update({
  id: '/pages/$',
  path: '/pages/$',
  getParentRoute: () => layoutAuthPreviewRoute,
} as any)

const usersUserIdIndexRoute = usersUserIdIndexImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => usersRouteRoute,
} as any)

const OnboardingIndexRoute = OnboardingIndexImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => layoutDefaultRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => layoutDefaultRoute,
} as any)

const usersIndexRoute = usersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => usersRouteRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => layoutAuthExternalRoute,
} as any)

const GroupsIndexRoute = GroupsIndexImport.update({
  id: '/groups/',
  path: '/groups/',
  getParentRoute: () => layoutAuthExternalRoute,
} as any)

const EnvironmentsIndexRoute = EnvironmentsIndexImport.update({
  id: '/environments/',
  path: '/environments/',
  getParentRoute: () => layoutAuthExternalRoute,
} as any)

const ApiKeysIndexRoute = ApiKeysIndexImport.update({
  id: '/apiKeys/',
  path: '/apiKeys/',
  getParentRoute: () => layoutAuthExternalRoute,
} as any)

const SignupFollowupIndexRoute = SignupFollowupIndexImport.update({
  id: '/signup/followup/',
  path: '/signup/followup/',
  getParentRoute: () => layoutDefaultRoute,
} as any)

const OrganizationsNewIndexRoute = OrganizationsNewIndexImport.update({
  id: '/organizations/new/',
  path: '/organizations/new/',
  getParentRoute: () => layoutDefaultRoute,
} as any)

const OnboardingCompleteIndexRoute = OnboardingCompleteIndexImport.update({
  id: '/onboarding/complete/',
  path: '/onboarding/complete/',
  getParentRoute: () => layoutDefaultRoute,
} as any)

const LoginEmailSentIndexRoute = LoginEmailSentIndexImport.update({
  id: '/login/emailSent/',
  path: '/login/emailSent/',
  getParentRoute: () => layoutDefaultRoute,
} as any)

const ErrorHostInstancePingErrorIndexRoute =
  ErrorHostInstancePingErrorIndexImport.update({
    id: '/error/hostInstancePingError/',
    path: '/error/hostInstancePingError/',
    getParentRoute: () => layoutDefaultRoute,
  } as any)

const GroupsNewIndexRoute = GroupsNewIndexImport.update({
  id: '/groups/new/',
  path: '/groups/new/',
  getParentRoute: () => layoutAuthExternalRoute,
} as any)

const GroupsGroupIdIndexRoute = GroupsGroupIdIndexImport.update({
  id: '/groups/$groupId/',
  path: '/groups/$groupId/',
  getParentRoute: () => layoutAuthExternalRoute,
} as any)

const EnvironmentsNewIndexRoute = EnvironmentsNewIndexImport.update({
  id: '/environments/new/',
  path: '/environments/new/',
  getParentRoute: () => layoutAuthExternalRoute,
} as any)

const EnvironmentsEnvironmentIdIndexRoute =
  EnvironmentsEnvironmentIdIndexImport.update({
    id: '/environments/$environmentId/',
    path: '/environments/$environmentId/',
    getParentRoute: () => layoutAuthExternalRoute,
  } as any)

const ApiKeysNewIndexRoute = ApiKeysNewIndexImport.update({
  id: '/apiKeys/new/',
  path: '/apiKeys/new/',
  getParentRoute: () => layoutAuthExternalRoute,
} as any)

const ApiKeysApiKeyIdIndexRoute = ApiKeysApiKeyIdIndexImport.update({
  id: '/apiKeys/$apiKeyId/',
  path: '/apiKeys/$apiKeyId/',
  getParentRoute: () => layoutAuthExternalRoute,
} as any)

const AuthMagicAuthenticateIndexRoute = AuthMagicAuthenticateIndexImport.update(
  {
    id: '/auth/magic/authenticate/',
    path: '/auth/magic/authenticate/',
    getParentRoute: () => layoutDefaultRoute,
  } as any,
)

const AuthInvitationsLoginIndexRoute = AuthInvitationsLoginIndexImport.update({
  id: '/auth/invitations/login/',
  path: '/auth/invitations/login/',
  getParentRoute: () => layoutDefaultRoute,
} as any)

const AuthInvitationsEmailSentIndexRoute =
  AuthInvitationsEmailSentIndexImport.update({
    id: '/auth/invitations/emailSent/',
    path: '/auth/invitations/emailSent/',
    getParentRoute: () => layoutDefaultRoute,
  } as any)

const AuthGoogleCallbackIndexRoute = AuthGoogleCallbackIndexImport.update({
  id: '/auth/google/callback/',
  path: '/auth/google/callback/',
  getParentRoute: () => layoutDefaultRoute,
} as any)

const usersEmailUpdateConfirmIndexRoute =
  usersEmailUpdateConfirmIndexImport.update({
    id: '/users/email/update/confirm/',
    path: '/users/email/update/confirm/',
    getParentRoute: () => layoutDefaultRoute,
  } as any)

const AuthInvitationsSignupFollowupIndexRoute =
  AuthInvitationsSignupFollowupIndexImport.update({
    id: '/auth/invitations/signup/followup/',
    path: '/auth/invitations/signup/followup/',
    getParentRoute: () => layoutDefaultRoute,
  } as any)

const AuthInvitationsMagicAuthenticateIndexRoute =
  AuthInvitationsMagicAuthenticateIndexImport.update({
    id: '/auth/invitations/magic/authenticate/',
    path: '/auth/invitations/magic/authenticate/',
    getParentRoute: () => layoutDefaultRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof layoutAuthExternalImport
      parentRoute: typeof rootRoute
    }
    '/_default': {
      id: '/_default'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof layoutDefaultImport
      parentRoute: typeof rootRoute
    }
    '/_preview': {
      id: '/_preview'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof layoutAuthPreviewImport
      parentRoute: typeof rootRoute
    }
    '/_auth/users': {
      id: '/_auth/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof usersRouteImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof pagesIndexImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_auth/apiKeys/': {
      id: '/_auth/apiKeys/'
      path: '/apiKeys'
      fullPath: '/apiKeys'
      preLoaderRoute: typeof ApiKeysIndexImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_auth/environments/': {
      id: '/_auth/environments/'
      path: '/environments'
      fullPath: '/environments'
      preLoaderRoute: typeof EnvironmentsIndexImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_auth/groups/': {
      id: '/_auth/groups/'
      path: '/groups'
      fullPath: '/groups'
      preLoaderRoute: typeof GroupsIndexImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_auth/settings/': {
      id: '/_auth/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_auth/users/': {
      id: '/_auth/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof usersIndexImport
      parentRoute: typeof usersRouteImport
    }
    '/_default/login/': {
      id: '/_default/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/onboarding/': {
      id: '/_default/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_auth/users/$userId': {
      id: '/_auth/users/$userId'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof usersUserIdIndexImport
      parentRoute: typeof usersRouteImport
    }
    '/_preview/pages/$': {
      id: '/_preview/pages/$'
      path: '/pages/$'
      fullPath: '/pages/$'
      preLoaderRoute: typeof pagesPageIdIndexImport
      parentRoute: typeof layoutAuthPreviewImport
    }
    '/_auth/apiKeys/$apiKeyId/': {
      id: '/_auth/apiKeys/$apiKeyId/'
      path: '/apiKeys/$apiKeyId'
      fullPath: '/apiKeys/$apiKeyId'
      preLoaderRoute: typeof ApiKeysApiKeyIdIndexImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_auth/apiKeys/new/': {
      id: '/_auth/apiKeys/new/'
      path: '/apiKeys/new'
      fullPath: '/apiKeys/new'
      preLoaderRoute: typeof ApiKeysNewIndexImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_auth/environments/$environmentId/': {
      id: '/_auth/environments/$environmentId/'
      path: '/environments/$environmentId'
      fullPath: '/environments/$environmentId'
      preLoaderRoute: typeof EnvironmentsEnvironmentIdIndexImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_auth/environments/new/': {
      id: '/_auth/environments/new/'
      path: '/environments/new'
      fullPath: '/environments/new'
      preLoaderRoute: typeof EnvironmentsNewIndexImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_auth/groups/$groupId/': {
      id: '/_auth/groups/$groupId/'
      path: '/groups/$groupId'
      fullPath: '/groups/$groupId'
      preLoaderRoute: typeof GroupsGroupIdIndexImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_auth/groups/new/': {
      id: '/_auth/groups/new/'
      path: '/groups/new'
      fullPath: '/groups/new'
      preLoaderRoute: typeof GroupsNewIndexImport
      parentRoute: typeof layoutAuthExternalImport
    }
    '/_default/error/hostInstancePingError/': {
      id: '/_default/error/hostInstancePingError/'
      path: '/error/hostInstancePingError'
      fullPath: '/error/hostInstancePingError'
      preLoaderRoute: typeof ErrorHostInstancePingErrorIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/login/emailSent/': {
      id: '/_default/login/emailSent/'
      path: '/login/emailSent'
      fullPath: '/login/emailSent'
      preLoaderRoute: typeof LoginEmailSentIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/onboarding/complete/': {
      id: '/_default/onboarding/complete/'
      path: '/onboarding/complete'
      fullPath: '/onboarding/complete'
      preLoaderRoute: typeof OnboardingCompleteIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/organizations/new/': {
      id: '/_default/organizations/new/'
      path: '/organizations/new'
      fullPath: '/organizations/new'
      preLoaderRoute: typeof OrganizationsNewIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/signup/followup/': {
      id: '/_default/signup/followup/'
      path: '/signup/followup'
      fullPath: '/signup/followup'
      preLoaderRoute: typeof SignupFollowupIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/auth/google/callback/': {
      id: '/_default/auth/google/callback/'
      path: '/auth/google/callback'
      fullPath: '/auth/google/callback'
      preLoaderRoute: typeof AuthGoogleCallbackIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/auth/invitations/emailSent/': {
      id: '/_default/auth/invitations/emailSent/'
      path: '/auth/invitations/emailSent'
      fullPath: '/auth/invitations/emailSent'
      preLoaderRoute: typeof AuthInvitationsEmailSentIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/auth/invitations/login/': {
      id: '/_default/auth/invitations/login/'
      path: '/auth/invitations/login'
      fullPath: '/auth/invitations/login'
      preLoaderRoute: typeof AuthInvitationsLoginIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/auth/magic/authenticate/': {
      id: '/_default/auth/magic/authenticate/'
      path: '/auth/magic/authenticate'
      fullPath: '/auth/magic/authenticate'
      preLoaderRoute: typeof AuthMagicAuthenticateIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/auth/invitations/magic/authenticate/': {
      id: '/_default/auth/invitations/magic/authenticate/'
      path: '/auth/invitations/magic/authenticate'
      fullPath: '/auth/invitations/magic/authenticate'
      preLoaderRoute: typeof AuthInvitationsMagicAuthenticateIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/auth/invitations/signup/followup/': {
      id: '/_default/auth/invitations/signup/followup/'
      path: '/auth/invitations/signup/followup'
      fullPath: '/auth/invitations/signup/followup'
      preLoaderRoute: typeof AuthInvitationsSignupFollowupIndexImport
      parentRoute: typeof layoutDefaultImport
    }
    '/_default/users/email/update/confirm/': {
      id: '/_default/users/email/update/confirm/'
      path: '/users/email/update/confirm'
      fullPath: '/users/email/update/confirm'
      preLoaderRoute: typeof usersEmailUpdateConfirmIndexImport
      parentRoute: typeof layoutDefaultImport
    }
  }
}

// Create and export the route tree

interface usersRouteRouteChildren {
  usersIndexRoute: typeof usersIndexRoute
  usersUserIdIndexRoute: typeof usersUserIdIndexRoute
}

const usersRouteRouteChildren: usersRouteRouteChildren = {
  usersIndexRoute: usersIndexRoute,
  usersUserIdIndexRoute: usersUserIdIndexRoute,
}

const usersRouteRouteWithChildren = usersRouteRoute._addFileChildren(
  usersRouteRouteChildren,
)

interface layoutAuthExternalRouteChildren {
  usersRouteRoute: typeof usersRouteRouteWithChildren
  pagesIndexRoute: typeof pagesIndexRoute
  ApiKeysIndexRoute: typeof ApiKeysIndexRoute
  EnvironmentsIndexRoute: typeof EnvironmentsIndexRoute
  GroupsIndexRoute: typeof GroupsIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
  ApiKeysApiKeyIdIndexRoute: typeof ApiKeysApiKeyIdIndexRoute
  ApiKeysNewIndexRoute: typeof ApiKeysNewIndexRoute
  EnvironmentsEnvironmentIdIndexRoute: typeof EnvironmentsEnvironmentIdIndexRoute
  EnvironmentsNewIndexRoute: typeof EnvironmentsNewIndexRoute
  GroupsGroupIdIndexRoute: typeof GroupsGroupIdIndexRoute
  GroupsNewIndexRoute: typeof GroupsNewIndexRoute
}

const layoutAuthExternalRouteChildren: layoutAuthExternalRouteChildren = {
  usersRouteRoute: usersRouteRouteWithChildren,
  pagesIndexRoute: pagesIndexRoute,
  ApiKeysIndexRoute: ApiKeysIndexRoute,
  EnvironmentsIndexRoute: EnvironmentsIndexRoute,
  GroupsIndexRoute: GroupsIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
  ApiKeysApiKeyIdIndexRoute: ApiKeysApiKeyIdIndexRoute,
  ApiKeysNewIndexRoute: ApiKeysNewIndexRoute,
  EnvironmentsEnvironmentIdIndexRoute: EnvironmentsEnvironmentIdIndexRoute,
  EnvironmentsNewIndexRoute: EnvironmentsNewIndexRoute,
  GroupsGroupIdIndexRoute: GroupsGroupIdIndexRoute,
  GroupsNewIndexRoute: GroupsNewIndexRoute,
}

const layoutAuthExternalRouteWithChildren =
  layoutAuthExternalRoute._addFileChildren(layoutAuthExternalRouteChildren)

interface layoutDefaultRouteChildren {
  LoginIndexRoute: typeof LoginIndexRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
  ErrorHostInstancePingErrorIndexRoute: typeof ErrorHostInstancePingErrorIndexRoute
  LoginEmailSentIndexRoute: typeof LoginEmailSentIndexRoute
  OnboardingCompleteIndexRoute: typeof OnboardingCompleteIndexRoute
  OrganizationsNewIndexRoute: typeof OrganizationsNewIndexRoute
  SignupFollowupIndexRoute: typeof SignupFollowupIndexRoute
  AuthGoogleCallbackIndexRoute: typeof AuthGoogleCallbackIndexRoute
  AuthInvitationsEmailSentIndexRoute: typeof AuthInvitationsEmailSentIndexRoute
  AuthInvitationsLoginIndexRoute: typeof AuthInvitationsLoginIndexRoute
  AuthMagicAuthenticateIndexRoute: typeof AuthMagicAuthenticateIndexRoute
  AuthInvitationsMagicAuthenticateIndexRoute: typeof AuthInvitationsMagicAuthenticateIndexRoute
  AuthInvitationsSignupFollowupIndexRoute: typeof AuthInvitationsSignupFollowupIndexRoute
  usersEmailUpdateConfirmIndexRoute: typeof usersEmailUpdateConfirmIndexRoute
}

const layoutDefaultRouteChildren: layoutDefaultRouteChildren = {
  LoginIndexRoute: LoginIndexRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
  ErrorHostInstancePingErrorIndexRoute: ErrorHostInstancePingErrorIndexRoute,
  LoginEmailSentIndexRoute: LoginEmailSentIndexRoute,
  OnboardingCompleteIndexRoute: OnboardingCompleteIndexRoute,
  OrganizationsNewIndexRoute: OrganizationsNewIndexRoute,
  SignupFollowupIndexRoute: SignupFollowupIndexRoute,
  AuthGoogleCallbackIndexRoute: AuthGoogleCallbackIndexRoute,
  AuthInvitationsEmailSentIndexRoute: AuthInvitationsEmailSentIndexRoute,
  AuthInvitationsLoginIndexRoute: AuthInvitationsLoginIndexRoute,
  AuthMagicAuthenticateIndexRoute: AuthMagicAuthenticateIndexRoute,
  AuthInvitationsMagicAuthenticateIndexRoute:
    AuthInvitationsMagicAuthenticateIndexRoute,
  AuthInvitationsSignupFollowupIndexRoute:
    AuthInvitationsSignupFollowupIndexRoute,
  usersEmailUpdateConfirmIndexRoute: usersEmailUpdateConfirmIndexRoute,
}

const layoutDefaultRouteWithChildren = layoutDefaultRoute._addFileChildren(
  layoutDefaultRouteChildren,
)

interface layoutAuthPreviewRouteChildren {
  pagesPageIdIndexRoute: typeof pagesPageIdIndexRoute
}

const layoutAuthPreviewRouteChildren: layoutAuthPreviewRouteChildren = {
  pagesPageIdIndexRoute: pagesPageIdIndexRoute,
}

const layoutAuthPreviewRouteWithChildren =
  layoutAuthPreviewRoute._addFileChildren(layoutAuthPreviewRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof layoutAuthPreviewRouteWithChildren
  '/users': typeof usersRouteRouteWithChildren
  '/': typeof pagesIndexRoute
  '/apiKeys': typeof ApiKeysIndexRoute
  '/environments': typeof EnvironmentsIndexRoute
  '/groups': typeof GroupsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/users/': typeof usersIndexRoute
  '/login': typeof LoginIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/users/$userId': typeof usersUserIdIndexRoute
  '/pages/$': typeof pagesPageIdIndexRoute
  '/apiKeys/$apiKeyId': typeof ApiKeysApiKeyIdIndexRoute
  '/apiKeys/new': typeof ApiKeysNewIndexRoute
  '/environments/$environmentId': typeof EnvironmentsEnvironmentIdIndexRoute
  '/environments/new': typeof EnvironmentsNewIndexRoute
  '/groups/$groupId': typeof GroupsGroupIdIndexRoute
  '/groups/new': typeof GroupsNewIndexRoute
  '/error/hostInstancePingError': typeof ErrorHostInstancePingErrorIndexRoute
  '/login/emailSent': typeof LoginEmailSentIndexRoute
  '/onboarding/complete': typeof OnboardingCompleteIndexRoute
  '/organizations/new': typeof OrganizationsNewIndexRoute
  '/signup/followup': typeof SignupFollowupIndexRoute
  '/auth/google/callback': typeof AuthGoogleCallbackIndexRoute
  '/auth/invitations/emailSent': typeof AuthInvitationsEmailSentIndexRoute
  '/auth/invitations/login': typeof AuthInvitationsLoginIndexRoute
  '/auth/magic/authenticate': typeof AuthMagicAuthenticateIndexRoute
  '/auth/invitations/magic/authenticate': typeof AuthInvitationsMagicAuthenticateIndexRoute
  '/auth/invitations/signup/followup': typeof AuthInvitationsSignupFollowupIndexRoute
  '/users/email/update/confirm': typeof usersEmailUpdateConfirmIndexRoute
}

export interface FileRoutesByTo {
  '': typeof layoutAuthPreviewRouteWithChildren
  '/': typeof pagesIndexRoute
  '/apiKeys': typeof ApiKeysIndexRoute
  '/environments': typeof EnvironmentsIndexRoute
  '/groups': typeof GroupsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/users': typeof usersIndexRoute
  '/login': typeof LoginIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/users/$userId': typeof usersUserIdIndexRoute
  '/pages/$': typeof pagesPageIdIndexRoute
  '/apiKeys/$apiKeyId': typeof ApiKeysApiKeyIdIndexRoute
  '/apiKeys/new': typeof ApiKeysNewIndexRoute
  '/environments/$environmentId': typeof EnvironmentsEnvironmentIdIndexRoute
  '/environments/new': typeof EnvironmentsNewIndexRoute
  '/groups/$groupId': typeof GroupsGroupIdIndexRoute
  '/groups/new': typeof GroupsNewIndexRoute
  '/error/hostInstancePingError': typeof ErrorHostInstancePingErrorIndexRoute
  '/login/emailSent': typeof LoginEmailSentIndexRoute
  '/onboarding/complete': typeof OnboardingCompleteIndexRoute
  '/organizations/new': typeof OrganizationsNewIndexRoute
  '/signup/followup': typeof SignupFollowupIndexRoute
  '/auth/google/callback': typeof AuthGoogleCallbackIndexRoute
  '/auth/invitations/emailSent': typeof AuthInvitationsEmailSentIndexRoute
  '/auth/invitations/login': typeof AuthInvitationsLoginIndexRoute
  '/auth/magic/authenticate': typeof AuthMagicAuthenticateIndexRoute
  '/auth/invitations/magic/authenticate': typeof AuthInvitationsMagicAuthenticateIndexRoute
  '/auth/invitations/signup/followup': typeof AuthInvitationsSignupFollowupIndexRoute
  '/users/email/update/confirm': typeof usersEmailUpdateConfirmIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof layoutAuthExternalRouteWithChildren
  '/_default': typeof layoutDefaultRouteWithChildren
  '/_preview': typeof layoutAuthPreviewRouteWithChildren
  '/_auth/users': typeof usersRouteRouteWithChildren
  '/_auth/': typeof pagesIndexRoute
  '/_auth/apiKeys/': typeof ApiKeysIndexRoute
  '/_auth/environments/': typeof EnvironmentsIndexRoute
  '/_auth/groups/': typeof GroupsIndexRoute
  '/_auth/settings/': typeof SettingsIndexRoute
  '/_auth/users/': typeof usersIndexRoute
  '/_default/login/': typeof LoginIndexRoute
  '/_default/onboarding/': typeof OnboardingIndexRoute
  '/_auth/users/$userId': typeof usersUserIdIndexRoute
  '/_preview/pages/$': typeof pagesPageIdIndexRoute
  '/_auth/apiKeys/$apiKeyId/': typeof ApiKeysApiKeyIdIndexRoute
  '/_auth/apiKeys/new/': typeof ApiKeysNewIndexRoute
  '/_auth/environments/$environmentId/': typeof EnvironmentsEnvironmentIdIndexRoute
  '/_auth/environments/new/': typeof EnvironmentsNewIndexRoute
  '/_auth/groups/$groupId/': typeof GroupsGroupIdIndexRoute
  '/_auth/groups/new/': typeof GroupsNewIndexRoute
  '/_default/error/hostInstancePingError/': typeof ErrorHostInstancePingErrorIndexRoute
  '/_default/login/emailSent/': typeof LoginEmailSentIndexRoute
  '/_default/onboarding/complete/': typeof OnboardingCompleteIndexRoute
  '/_default/organizations/new/': typeof OrganizationsNewIndexRoute
  '/_default/signup/followup/': typeof SignupFollowupIndexRoute
  '/_default/auth/google/callback/': typeof AuthGoogleCallbackIndexRoute
  '/_default/auth/invitations/emailSent/': typeof AuthInvitationsEmailSentIndexRoute
  '/_default/auth/invitations/login/': typeof AuthInvitationsLoginIndexRoute
  '/_default/auth/magic/authenticate/': typeof AuthMagicAuthenticateIndexRoute
  '/_default/auth/invitations/magic/authenticate/': typeof AuthInvitationsMagicAuthenticateIndexRoute
  '/_default/auth/invitations/signup/followup/': typeof AuthInvitationsSignupFollowupIndexRoute
  '/_default/users/email/update/confirm/': typeof usersEmailUpdateConfirmIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/users'
    | '/'
    | '/apiKeys'
    | '/environments'
    | '/groups'
    | '/settings'
    | '/users/'
    | '/login'
    | '/onboarding'
    | '/users/$userId'
    | '/pages/$'
    | '/apiKeys/$apiKeyId'
    | '/apiKeys/new'
    | '/environments/$environmentId'
    | '/environments/new'
    | '/groups/$groupId'
    | '/groups/new'
    | '/error/hostInstancePingError'
    | '/login/emailSent'
    | '/onboarding/complete'
    | '/organizations/new'
    | '/signup/followup'
    | '/auth/google/callback'
    | '/auth/invitations/emailSent'
    | '/auth/invitations/login'
    | '/auth/magic/authenticate'
    | '/auth/invitations/magic/authenticate'
    | '/auth/invitations/signup/followup'
    | '/users/email/update/confirm'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/apiKeys'
    | '/environments'
    | '/groups'
    | '/settings'
    | '/users'
    | '/login'
    | '/onboarding'
    | '/users/$userId'
    | '/pages/$'
    | '/apiKeys/$apiKeyId'
    | '/apiKeys/new'
    | '/environments/$environmentId'
    | '/environments/new'
    | '/groups/$groupId'
    | '/groups/new'
    | '/error/hostInstancePingError'
    | '/login/emailSent'
    | '/onboarding/complete'
    | '/organizations/new'
    | '/signup/followup'
    | '/auth/google/callback'
    | '/auth/invitations/emailSent'
    | '/auth/invitations/login'
    | '/auth/magic/authenticate'
    | '/auth/invitations/magic/authenticate'
    | '/auth/invitations/signup/followup'
    | '/users/email/update/confirm'
  id:
    | '__root__'
    | '/_auth'
    | '/_default'
    | '/_preview'
    | '/_auth/users'
    | '/_auth/'
    | '/_auth/apiKeys/'
    | '/_auth/environments/'
    | '/_auth/groups/'
    | '/_auth/settings/'
    | '/_auth/users/'
    | '/_default/login/'
    | '/_default/onboarding/'
    | '/_auth/users/$userId'
    | '/_preview/pages/$'
    | '/_auth/apiKeys/$apiKeyId/'
    | '/_auth/apiKeys/new/'
    | '/_auth/environments/$environmentId/'
    | '/_auth/environments/new/'
    | '/_auth/groups/$groupId/'
    | '/_auth/groups/new/'
    | '/_default/error/hostInstancePingError/'
    | '/_default/login/emailSent/'
    | '/_default/onboarding/complete/'
    | '/_default/organizations/new/'
    | '/_default/signup/followup/'
    | '/_default/auth/google/callback/'
    | '/_default/auth/invitations/emailSent/'
    | '/_default/auth/invitations/login/'
    | '/_default/auth/magic/authenticate/'
    | '/_default/auth/invitations/magic/authenticate/'
    | '/_default/auth/invitations/signup/followup/'
    | '/_default/users/email/update/confirm/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  layoutAuthExternalRoute: typeof layoutAuthExternalRouteWithChildren
  layoutDefaultRoute: typeof layoutDefaultRouteWithChildren
  layoutAuthPreviewRoute: typeof layoutAuthPreviewRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  layoutAuthExternalRoute: layoutAuthExternalRouteWithChildren,
  layoutDefaultRoute: layoutDefaultRouteWithChildren,
  layoutAuthPreviewRoute: layoutAuthPreviewRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "root.tsx",
      "children": [
        "/_auth",
        "/_default",
        "/_preview"
      ]
    },
    "/_auth": {
      "filePath": "layout-auth-external.tsx",
      "children": [
        "/_auth/users",
        "/_auth/",
        "/_auth/apiKeys/",
        "/_auth/environments/",
        "/_auth/groups/",
        "/_auth/settings/",
        "/_auth/apiKeys/$apiKeyId/",
        "/_auth/apiKeys/new/",
        "/_auth/environments/$environmentId/",
        "/_auth/environments/new/",
        "/_auth/groups/$groupId/",
        "/_auth/groups/new/"
      ]
    },
    "/_default": {
      "filePath": "layout-default.tsx",
      "children": [
        "/_default/login/",
        "/_default/onboarding/",
        "/_default/error/hostInstancePingError/",
        "/_default/login/emailSent/",
        "/_default/onboarding/complete/",
        "/_default/organizations/new/",
        "/_default/signup/followup/",
        "/_default/auth/google/callback/",
        "/_default/auth/invitations/emailSent/",
        "/_default/auth/invitations/login/",
        "/_default/auth/magic/authenticate/",
        "/_default/auth/invitations/magic/authenticate/",
        "/_default/auth/invitations/signup/followup/",
        "/_default/users/email/update/confirm/"
      ]
    },
    "/_preview": {
      "filePath": "layout-auth-preview.tsx",
      "children": [
        "/_preview/pages/$"
      ]
    },
    "/_auth/users": {
      "filePath": "users/route.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/users/",
        "/_auth/users/$userId"
      ]
    },
    "/_auth/": {
      "filePath": "pages/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/apiKeys/": {
      "filePath": "apiKeys/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/environments/": {
      "filePath": "environments/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/groups/": {
      "filePath": "groups/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/settings/": {
      "filePath": "settings/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/": {
      "filePath": "users/index.tsx",
      "parent": "/_auth/users"
    },
    "/_default/login/": {
      "filePath": "login/index.tsx",
      "parent": "/_default"
    },
    "/_default/onboarding/": {
      "filePath": "onboarding/index.tsx",
      "parent": "/_default"
    },
    "/_auth/users/$userId": {
      "filePath": "users/$userId/index.tsx",
      "parent": "/_auth/users"
    },
    "/_preview/pages/$": {
      "filePath": "pages/pageId/index.tsx",
      "parent": "/_preview"
    },
    "/_auth/apiKeys/$apiKeyId/": {
      "filePath": "apiKeys/$apiKeyId/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/apiKeys/new/": {
      "filePath": "apiKeys/new/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/environments/$environmentId/": {
      "filePath": "environments/$environmentId/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/environments/new/": {
      "filePath": "environments/new/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/groups/$groupId/": {
      "filePath": "groups/$groupId/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/groups/new/": {
      "filePath": "groups/new/index.tsx",
      "parent": "/_auth"
    },
    "/_default/error/hostInstancePingError/": {
      "filePath": "error/hostInstancePingError/index.tsx",
      "parent": "/_default"
    },
    "/_default/login/emailSent/": {
      "filePath": "login/emailSent/index.tsx",
      "parent": "/_default"
    },
    "/_default/onboarding/complete/": {
      "filePath": "onboarding/complete/index.tsx",
      "parent": "/_default"
    },
    "/_default/organizations/new/": {
      "filePath": "organizations/new/index.tsx",
      "parent": "/_default"
    },
    "/_default/signup/followup/": {
      "filePath": "signup/followup/index.tsx",
      "parent": "/_default"
    },
    "/_default/auth/google/callback/": {
      "filePath": "auth/google/callback/index.tsx",
      "parent": "/_default"
    },
    "/_default/auth/invitations/emailSent/": {
      "filePath": "auth/invitations/emailSent/index.tsx",
      "parent": "/_default"
    },
    "/_default/auth/invitations/login/": {
      "filePath": "auth/invitations/login/index.tsx",
      "parent": "/_default"
    },
    "/_default/auth/magic/authenticate/": {
      "filePath": "auth/magic/authenticate/index.tsx",
      "parent": "/_default"
    },
    "/_default/auth/invitations/magic/authenticate/": {
      "filePath": "auth/invitations/magic/authenticate/index.tsx",
      "parent": "/_default"
    },
    "/_default/auth/invitations/signup/followup/": {
      "filePath": "auth/invitations/signup/followup/index.tsx",
      "parent": "/_default"
    },
    "/_default/users/email/update/confirm/": {
      "filePath": "users/email/update/confirm/index.tsx",
      "parent": "/_default"
    }
  }
}
ROUTE_MANIFEST_END */
